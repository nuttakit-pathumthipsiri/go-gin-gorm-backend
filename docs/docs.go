// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/details/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic-details"
                ],
                "summary": "Get a topic detail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic Detail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TopicDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic-details"
                ],
                "summary": "Update a topic detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic Detail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Topic Detail object",
                        "name": "detail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateTopicDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TopicDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "topic-details"
                ],
                "summary": "Delete a topic detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic Detail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            }
        },
        "/topics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Get all topics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Topic"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Create a new topic",
                "parameters": [
                    {
                        "description": "Topic request object",
                        "name": "topic",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateTopicRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Topic"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            }
        },
        "/topics/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Get a topic by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Topic"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.NotFoundError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Update a topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Topic request object",
                        "name": "topic",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateTopicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Topic"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "topics"
                ],
                "summary": "Delete a topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            }
        },
        "/topics/{id}/details": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic-details"
                ],
                "summary": "Get all details for a topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TopicDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "topic-details"
                ],
                "summary": "Create a new topic detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Topic Detail object",
                        "name": "detail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateTopicDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.TopicDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.InternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BadRequestError": {
            "description": "Bad Request error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request data"
                }
            }
        },
        "model.CreateTopicDetailRequest": {
            "description": "Topic detail request object",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "ชื่อ topic_detail",
                    "type": "string",
                    "example": "ยาแก้ปวด"
                }
            }
        },
        "model.CreateTopicRequest": {
            "description": "Topic request object",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "ชื่อ topic",
                    "type": "string",
                    "example": "ยา"
                }
            }
        },
        "model.ErrorResponse": {
            "description": "Standard error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request data"
                }
            }
        },
        "model.InternalServerError": {
            "description": "Internal Server Error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal server error occurred"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "admin123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.UserResponse"
                }
            }
        },
        "model.NotFoundError": {
            "description": "Not Found error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Resource not found"
                }
            }
        },
        "model.Topic": {
            "description": "Topic entity",
            "type": "object",
            "required": [
                "created_by",
                "name",
                "order"
            ],
            "properties": {
                "created_at": {
                    "description": "วันที่สร้าง",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "created_by": {
                    "description": "ผู้สร้าง",
                    "type": "string",
                    "example": "admin"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "ชื่อ topic",
                    "type": "string",
                    "example": "ยา"
                },
                "order": {
                    "description": "ลำดับ topic",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "วันที่อัพเดท",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "updated_by": {
                    "description": "ผู้อัพเดท",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "model.TopicDetail": {
            "description": "Topic detail entity",
            "type": "object",
            "required": [
                "created_by",
                "name",
                "order"
            ],
            "properties": {
                "created_at": {
                    "description": "วันที่สร้าง",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "created_by": {
                    "description": "ผู้สร้าง",
                    "type": "string",
                    "example": "admin"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "ชื่อ topic_detail",
                    "type": "string",
                    "example": "ยาแก้ปวด"
                },
                "order": {
                    "description": "ลำดับ topic_detail",
                    "type": "integer",
                    "example": 1
                },
                "topic": {
                    "$ref": "#/definitions/model.Topic"
                },
                "topic_id": {
                    "description": "รหัส topic",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "วันที่อัพเดท",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "updated_by": {
                    "description": "ผู้อัพเดท",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "model.UpdateTopicDetailRequest": {
            "description": "Update topic detail request object",
            "type": "object",
            "properties": {
                "name": {
                    "description": "ชื่อ topic_detail (optional)",
                    "type": "string",
                    "example": "ยาแก้ปวด"
                },
                "order": {
                    "description": "ลำดับ topic_detail (optional)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.UpdateTopicRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "ชื่อ topic (optional)",
                    "type": "string",
                    "example": "ยา"
                },
                "order": {
                    "description": "ลำดับ topic (optional)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Gin GORM Backend API",
	Description:      "A RESTful API for managing topics and topic details using Go, Gin, and GORM",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
